{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCMxDC,IAAAA,aAAAA,IAAqB,qCAAqC,YACtDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAwB,iBAAiB,SAAUC,GAAO,WACxDH,IAAAA,MAAAA,UAAoB,wBAIzBG,EAAMC,IAAI,mBAAoBC,IAAAA,UAAiB,CAC3CC,UAAW,SACXC,KAAM,cACNC,QAAS,WACL,GAAKC,QAAQC,IAAYV,IAAAA,WAAAA,MAAqB,iEAA9C,CAIA,EAAKW,WAAa,SAKlB,IAAMC,EAAWZ,IAAAA,MAAAA,aAAuB,SACxCY,EAASC,SAAS,CAACC,GAAI,EAAKC,KAAKD,OACjCF,EAASI,QAAS,EAElBJ,EAASK,KAAK,CACVC,YAAa,OACdC,MAAK,WACJ,EAAKR,WAAa,OAClBS,EAAEC,SAEFC,YAAW,WACP,EAAKX,WAAa,KAClBS,EAAEC,WACH,QATP,OAUS,SAAAE,GAKL,MAHA,EAAKZ,WAAa,KAClBS,EAAEC,SAEIE,OAGdC,QAA4B,WAAnBC,KAAKC,WACf1B,IAAAA,WAAAA,MAAqB,wDAA8E,SAApByB,KAAKd,WAAwB,OAAS,YAAa,Y","sources":["webpack://@clarkwinkelmann/reset-preferences/webpack/bootstrap","webpack://@clarkwinkelmann/reset-preferences/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/reset-preferences/webpack/runtime/define property getters","webpack://@clarkwinkelmann/reset-preferences/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/reset-preferences/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/reset-preferences/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/reset-preferences/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/reset-preferences/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/reset-preferences/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/reset-preferences/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@clarkwinkelmann/reset-preferences/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport extractText from 'flarum/common/utils/extractText';\nimport Button from 'flarum/common/components/Button';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\n\napp.initializers.add('clarkwinkelmann-reset-preferences', () => {\n    extend(SettingsPage.prototype, 'settingsItems', function (items) {\n        if (!app.forum.attribute('canResetPreferences')) {\n            return;\n        }\n\n        items.add('resetPreferences', Button.component({\n            className: 'Button',\n            icon: 'fas fa-undo',\n            onclick: () => {\n                if (!confirm(extractText(app.translator.trans('clarkwinkelmann-reset-preferences.forum.preferences.confirm')))) {\n                    return;\n                }\n\n                this.resetState = 'saving';\n\n                // We must create a copy of the user because otherwise Flarum will crash when the value is set to null internally\n                // We can't set it to an empty POJO either because that object should have the key-value for all default settings\n                // Which we will only retrieve as the response to the API request\n                const saveUser = app.store.createRecord('users');\n                saveUser.pushData({id: this.user.id()});\n                saveUser.exists = true;\n\n                saveUser.save({\n                    preferences: null,\n                }).then(() => {\n                    this.resetState = 'done';\n                    m.redraw();\n\n                    setTimeout(() => {\n                        this.resetState = null;\n                        m.redraw();\n                    }, 2000);\n                }).catch(error => {\n                    // No need for special error state, Flarum error handler should already display an alert\n                    this.resetState = null;\n                    m.redraw();\n\n                    throw error;\n                });\n            },\n            loading: this.resetting === 'saving',\n        }, app.translator.trans('clarkwinkelmann-reset-preferences.forum.preferences.' + (this.resetState === 'done' ? 'done' : 'reset'))), -500); // Place at the very bottom of the page\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","SettingsPage","items","add","Button","className","icon","onclick","confirm","extractText","resetState","saveUser","pushData","id","user","exists","save","preferences","then","m","redraw","setTimeout","error","loading","this","resetting"],"sourceRoot":""}